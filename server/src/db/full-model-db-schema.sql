-- MySQL Script generated by MySQL Workbench
-- Thu Nov  9 22:02:33 2023
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema GoldFit
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `GoldFit` ;

-- -----------------------------------------------------
-- Schema GoldFit
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `GoldFit` DEFAULT CHARACTER SET utf8 ;
SHOW WARNINGS;
USE `GoldFit` ;

-- -----------------------------------------------------
-- Table `GoldFit`.`Program`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `GoldFit`.`Program` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `GoldFit`.`Program` (
  `idProgram` SMALLINT(2) UNSIGNED NOT NULL AUTO_INCREMENT,
  `ProgramName` VARCHAR(45) NOT NULL,
  `ProgramDescription` VARCHAR(320) NOT NULL,
  `ProgramDuration` INT NOT NULL,
  PRIMARY KEY (`idProgram`))
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `GoldFit`.`Exercise`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `GoldFit`.`Exercise` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `GoldFit`.`Exercise` (
  `idExercise` SMALLINT(2) UNSIGNED NOT NULL AUTO_INCREMENT,
  `ExerciseName` VARCHAR(45) NOT NULL,
  `ExerciseDescription` VARCHAR(320) NOT NULL,
  `ExerciseNumberRepetitionsMin` INT NOT NULL DEFAULT 0,
  `ExerciseNumberRepetitionsMax` INT NOT NULL DEFAULT 0,
  `ExerciseDescriptionURL` VARCHAR(45) NULL,
  PRIMARY KEY (`idExercise`))
ENGINE = InnoDB;

SHOW WARNINGS;
CREATE UNIQUE INDEX `ExerciceName_UNIQUE` ON `GoldFit`.`Exercise` (`ExerciseName` ASC) VISIBLE;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `GoldFit`.`ExerciseSeries`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `GoldFit`.`ExerciseSeries` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `GoldFit`.`ExerciseSeries` (
  `idExerciseSeries` SMALLINT(2) UNSIGNED NOT NULL AUTO_INCREMENT,
  `ExerciseSeriesName` VARCHAR(45) NOT NULL,
  `ExerciseSeriesDescription` VARCHAR(320) NULL,
  PRIMARY KEY (`idExerciseSeries`))
ENGINE = InnoDB;

SHOW WARNINGS;
CREATE UNIQUE INDEX `ExerciceSeriesName_UNIQUE` ON `GoldFit`.`ExerciseSeries` (`ExerciseSeriesName` ASC) VISIBLE;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `GoldFit`.`ProgramExerciseSeries`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `GoldFit`.`ProgramExerciseSeries` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `GoldFit`.`ProgramExerciseSeries` (
  `ProgramExerciseSeriesId` SMALLINT(2) UNSIGNED NOT NULL AUTO_INCREMENT,
  `ProgramId` SMALLINT(2) UNSIGNED NOT NULL,
  `ExerciseSeriesId` SMALLINT(2) UNSIGNED NOT NULL,
  `startDay` INT NOT NULL,
  `endDay` INT NOT NULL,
  PRIMARY KEY (`ProgramExerciseSeriesId`),
  CONSTRAINT `fk_programId`
    FOREIGN KEY (`ProgramId`)
    REFERENCES `GoldFit`.`Program` (`idProgram`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_exercise_series_id`
    FOREIGN KEY (`ExerciseSeriesId`)
    REFERENCES `GoldFit`.`ExerciseSeries` (`idExerciseSeries`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

SHOW WARNINGS;
CREATE INDEX `fk_programId_idx` ON `GoldFit`.`ProgramExerciseSeries` (`ProgramId` ASC) VISIBLE;

SHOW WARNINGS;
CREATE INDEX `fk_exercise_series_id_idx` ON `GoldFit`.`ProgramExerciseSeries` (`ExerciseSeriesId` ASC) VISIBLE;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `GoldFit`.`ExerciseSeriesExercise`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `GoldFit`.`ExerciseSeriesExercise` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `GoldFit`.`ExerciseSeriesExercise` (
  `idExerciseSeriesExercise` SMALLINT(2) UNSIGNED NOT NULL AUTO_INCREMENT,
  `ExerciseSeriesId` SMALLINT(2) UNSIGNED NOT NULL,
  `ExerciseId` SMALLINT(2) UNSIGNED NOT NULL,
  `ExerciseOrder` INT NOT NULL,
  `ExerciseNumberSeriesMin` INT NOT NULL DEFAULT 0,
  `ExerciseNumberSeriesMax` INT NOT NULL,
  PRIMARY KEY (`idExerciseSeriesExercise`),
  CONSTRAINT `fk_ExerciseId`
    FOREIGN KEY (`ExerciseId`)
    REFERENCES `GoldFit`.`Exercise` (`idExercise`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ExerciseSeriesId`
    FOREIGN KEY (`ExerciseSeriesId`)
    REFERENCES `GoldFit`.`ExerciseSeries` (`idExerciseSeries`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE)
ENGINE = InnoDB;

SHOW WARNINGS;
CREATE INDEX `fk_ExerciseId_idx` ON `GoldFit`.`ExerciseSeriesExercise` (`ExerciseId` ASC) VISIBLE;

SHOW WARNINGS;
CREATE INDEX `fk_ExerciseSeriesId_idx` ON `GoldFit`.`ExerciseSeriesExercise` (`ExerciseSeriesId` ASC) VISIBLE;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `GoldFit`.`User`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `GoldFit`.`User` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `GoldFit`.`User` (
  `idPatient` SMALLINT(2) UNSIGNED NOT NULL AUTO_INCREMENT,
  `PatientFirstName` VARCHAR(45) NOT NULL,
  `PatientLastName` VARCHAR(45) NOT NULL,
  `ProgramId` SMALLINT(2) UNSIGNED NULL,
  `Email` VARCHAR(45) NOT NULL,
  `Password` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idPatient`),
  CONSTRAINT `fk_Patient_Program1`
    FOREIGN KEY (`ProgramId`)
    REFERENCES `GoldFit`.`Program` (`idProgram`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

SHOW WARNINGS;
CREATE INDEX `fk_Patient_Program1_idx` ON `GoldFit`.`User` (`ProgramId` ASC) VISIBLE;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `GoldFit`.`ProgramDayRecord`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `GoldFit`.`ProgramDayRecord` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `GoldFit`.`ProgramDayRecord` (
  `idProgramDayRecord` SMALLINT(2) UNSIGNED NOT NULL,
  `date` DATE NOT NULL,
  `ProgramEnrollmentID` SMALLINT(2) UNSIGNED NOT NULL,
  `UserId` SMALLINT(2) UNSIGNED NOT NULL,
  PRIMARY KEY (`idProgramDayRecord`),
  CONSTRAINT `fk_ProgramDayRecord_Patient1`
    FOREIGN KEY (`UserId`)
    REFERENCES `GoldFit`.`User` (`idPatient`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

SHOW WARNINGS;
CREATE UNIQUE INDEX `date_UNIQUE` ON `GoldFit`.`ProgramDayRecord` (`date` ASC) VISIBLE;

SHOW WARNINGS;
CREATE INDEX `fk_ProgramDayRecord_Patient1_idx` ON `GoldFit`.`ProgramDayRecord` (`UserId` ASC) VISIBLE;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `GoldFit`.`ExerciseRecord`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `GoldFit`.`ExerciseRecord` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `GoldFit`.`ExerciseRecord` (
  `idExerciseRecord` SMALLINT(2) UNSIGNED NOT NULL,
  `numberSeries` SMALLINT(2) NOT NULL DEFAULT 0,
  `numberRepetitions` SMALLINT(2) NOT NULL DEFAULT 0,
  `ProgramDayRecordId` SMALLINT(2) UNSIGNED NOT NULL,
  `ExerciseId` SMALLINT(2) UNSIGNED NOT NULL,
  PRIMARY KEY (`idExerciseRecord`),
  CONSTRAINT `fk_program_day_record`
    FOREIGN KEY (`ProgramDayRecordId`)
    REFERENCES `GoldFit`.`ProgramDayRecord` (`idProgramDayRecord`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_exerice`
    FOREIGN KEY (`ExerciseId`)
    REFERENCES `GoldFit`.`Exercise` (`idExercise`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

SHOW WARNINGS;
CREATE INDEX `fk_program_day_record_idx` ON `GoldFit`.`ExerciseRecord` (`ProgramDayRecordId` ASC) VISIBLE;

SHOW WARNINGS;
CREATE INDEX `fk_exerice_idx` ON `GoldFit`.`ExerciseRecord` (`ExerciseId` ASC) VISIBLE;

SHOW WARNINGS;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

-- -----------------------------------------------------
-- Data for table `GoldFit`.`Program`
-- -----------------------------------------------------
START TRANSACTION;
USE `GoldFit`;
INSERT INTO `GoldFit`.`Program` (`idProgram`, `ProgramName`, `ProgramDescription`, `ProgramDuration`) VALUES (1, 'PACE', 'This is the PACE program', 60);
INSERT INTO `GoldFit`.`Program` (`idProgram`, `ProgramName`, `ProgramDescription`, `ProgramDuration`) VALUES (2, 'PATH', 'This is the PATH program', 60);

COMMIT;


-- -----------------------------------------------------
-- Data for table `GoldFit`.`Exercise`
-- -----------------------------------------------------
START TRANSACTION;
USE `GoldFit`;
INSERT INTO `GoldFit`.`Exercise` (`idExercise`, `ExerciseName`, `ExerciseDescription`, `ExerciseNumberRepetitionsMin`, `ExerciseNumberRepetitionsMax`, `ExerciseDescriptionURL`) VALUES (1, 'Sit-Ups', 'These are sit-ups', 10, 30, 'https://youtu.be/ojByzJhwVFE');
INSERT INTO `GoldFit`.`Exercise` (`idExercise`, `ExerciseName`, `ExerciseDescription`, `ExerciseNumberRepetitionsMin`, `ExerciseNumberRepetitionsMax`, `ExerciseDescriptionURL`) VALUES (2, 'Lie Down', 'Not as easy as it seems', 40, 50, 'https://youtu.be/gyds04mi_z0');
INSERT INTO `GoldFit`.`Exercise` (`idExercise`, `ExerciseName`, `ExerciseDescription`, `ExerciseNumberRepetitionsMin`, `ExerciseNumberRepetitionsMax`, `ExerciseDescriptionURL`) VALUES (3, 'Sleeping', 'Don\'t laugh', 50, 60, 'https://youtu.be/ojByzJhwVFE');

COMMIT;


-- -----------------------------------------------------
-- Data for table `GoldFit`.`ExerciseSeries`
-- -----------------------------------------------------
START TRANSACTION;
USE `GoldFit`;
INSERT INTO `GoldFit`.`ExerciseSeries` (`idExerciseSeries`, `ExerciseSeriesName`, `ExerciseSeriesDescription`) VALUES (1, 'SeriesOne', 'Consists of exercice 1 (sit-ups) and 2 (lie downs) a few times');
INSERT INTO `GoldFit`.`ExerciseSeries` (`idExerciseSeries`, `ExerciseSeriesName`, `ExerciseSeriesDescription`) VALUES (2, 'SeriesTwo', 'Consists of exercice 1 (sit-ups) and 3 (sleeping)');
INSERT INTO `GoldFit`.`ExerciseSeries` (`idExerciseSeries`, `ExerciseSeriesName`, `ExerciseSeriesDescription`) VALUES (3, 'SeriesThree', 'Consists of exercices 1, 2, and 3');

COMMIT;


-- -----------------------------------------------------
-- Data for table `GoldFit`.`ProgramExerciseSeries`
-- -----------------------------------------------------
START TRANSACTION;
USE `GoldFit`;
INSERT INTO `GoldFit`.`ProgramExerciseSeries` (`ProgramExerciseSeriesId`, `ProgramId`, `ExerciseSeriesId`, `startDay`, `endDay`) VALUES (1, 1, 3, 1, 60);
INSERT INTO `GoldFit`.`ProgramExerciseSeries` (`ProgramExerciseSeriesId`, `ProgramId`, `ExerciseSeriesId`, `startDay`, `endDay`) VALUES (2, 2, 1, 1, 19);
INSERT INTO `GoldFit`.`ProgramExerciseSeries` (`ProgramExerciseSeriesId`, `ProgramId`, `ExerciseSeriesId`, `startDay`, `endDay`) VALUES (3, 2, 2, 20, 39);
INSERT INTO `GoldFit`.`ProgramExerciseSeries` (`ProgramExerciseSeriesId`, `ProgramId`, `ExerciseSeriesId`, `startDay`, `endDay`) VALUES (4, 2, 3, 40, 60);

COMMIT;


-- -----------------------------------------------------
-- Data for table `GoldFit`.`ExerciseSeriesExercise`
-- -----------------------------------------------------
START TRANSACTION;
USE `GoldFit`;
INSERT INTO `GoldFit`.`ExerciseSeriesExercise` (`idExerciseSeriesExercise`, `ExerciseSeriesId`, `ExerciseId`, `ExerciseOrder`, `ExerciseNumberSeriesMin`, `ExerciseNumberSeriesMax`) VALUES (1, 1, 1, 1, 2, 3);
INSERT INTO `GoldFit`.`ExerciseSeriesExercise` (`idExerciseSeriesExercise`, `ExerciseSeriesId`, `ExerciseId`, `ExerciseOrder`, `ExerciseNumberSeriesMin`, `ExerciseNumberSeriesMax`) VALUES (2, 1, 2, 2, 3, 4);
INSERT INTO `GoldFit`.`ExerciseSeriesExercise` (`idExerciseSeriesExercise`, `ExerciseSeriesId`, `ExerciseId`, `ExerciseOrder`, `ExerciseNumberSeriesMin`, `ExerciseNumberSeriesMax`) VALUES (3, 2, 1, 1, 2, 4);
INSERT INTO `GoldFit`.`ExerciseSeriesExercise` (`idExerciseSeriesExercise`, `ExerciseSeriesId`, `ExerciseId`, `ExerciseOrder`, `ExerciseNumberSeriesMin`, `ExerciseNumberSeriesMax`) VALUES (4, 2, 3, 2, 2, 5);
INSERT INTO `GoldFit`.`ExerciseSeriesExercise` (`idExerciseSeriesExercise`, `ExerciseSeriesId`, `ExerciseId`, `ExerciseOrder`, `ExerciseNumberSeriesMin`, `ExerciseNumberSeriesMax`) VALUES (5, 3, 1, 1, 2, 4);
INSERT INTO `GoldFit`.`ExerciseSeriesExercise` (`idExerciseSeriesExercise`, `ExerciseSeriesId`, `ExerciseId`, `ExerciseOrder`, `ExerciseNumberSeriesMin`, `ExerciseNumberSeriesMax`) VALUES (6, 3, 2, 2, 4, 5);
INSERT INTO `GoldFit`.`ExerciseSeriesExercise` (`idExerciseSeriesExercise`, `ExerciseSeriesId`, `ExerciseId`, `ExerciseOrder`, `ExerciseNumberSeriesMin`, `ExerciseNumberSeriesMax`) VALUES (7, 3, 3, 3, 3, 4);

COMMIT;


-- -----------------------------------------------------
-- Data for table `GoldFit`.`User`
-- -----------------------------------------------------
START TRANSACTION;
USE `GoldFit`;
INSERT INTO `GoldFit`.`User` (`idPatient`, `PatientFirstName`, `PatientLastName`, `ProgramId`, `Email`, `Password`) VALUES (1, 'Mylène', 'Aubertin', NULL, DEFAULT, DEFAULT);
INSERT INTO `GoldFit`.`User` (`idPatient`, `PatientFirstName`, `PatientLastName`, `ProgramId`, `Email`, `Password`) VALUES (2, 'Hafedh', 'Mili', NULL, DEFAULT, DEFAULT);

COMMIT;


-- -----------------------------------------------------
-- Data for table `GoldFit`.`ProgramDayRecord`
-- -----------------------------------------------------
START TRANSACTION;
USE `GoldFit`;
INSERT INTO `GoldFit`.`ProgramDayRecord` (`idProgramDayRecord`, `date`, `ProgramEnrollmentID`, `UserId`) VALUES (1, '2022-04-01', 2, DEFAULT);
INSERT INTO `GoldFit`.`ProgramDayRecord` (`idProgramDayRecord`, `date`, `ProgramEnrollmentID`, `UserId`) VALUES (2, '2022-04-02', 2, DEFAULT);

COMMIT;


-- -----------------------------------------------------
-- Data for table `GoldFit`.`ExerciseRecord`
-- -----------------------------------------------------
START TRANSACTION;
USE `GoldFit`;
INSERT INTO `GoldFit`.`ExerciseRecord` (`idExerciseRecord`, `numberSeries`, `numberRepetitions`, `ProgramDayRecordId`, `ExerciseId`) VALUES (1, 3, 10, 1, 1);
INSERT INTO `GoldFit`.`ExerciseRecord` (`idExerciseRecord`, `numberSeries`, `numberRepetitions`, `ProgramDayRecordId`, `ExerciseId`) VALUES (2, 2, 8, 1, 2);
INSERT INTO `GoldFit`.`ExerciseRecord` (`idExerciseRecord`, `numberSeries`, `numberRepetitions`, `ProgramDayRecordId`, `ExerciseId`) VALUES (3, 3, 10, 2, 1);
INSERT INTO `GoldFit`.`ExerciseRecord` (`idExerciseRecord`, `numberSeries`, `numberRepetitions`, `ProgramDayRecordId`, `ExerciseId`) VALUES (4, 2, 8, 2, 2);

COMMIT;

